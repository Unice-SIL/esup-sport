<?php

namespace UcaBundle\Repository;

use UcaBundle\Entity\FormatAvecCreneau;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
use Doctrine\ORM\Query\ResultSetMapping;


/**
 * ActiviteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DhtmlxSerieRepository extends \Doctrine\ORM\EntityRepository
{
    public function findDhtmlxDateByReference($type, $id)
    {
        $query = $this->createQueryBuilder("d");
        if ($type == "ressource") {
            $query->join("d.evenements", "e")
                ->join("e.reservabilite", "re")
                ->join("re.ressource", "r")
                ->where("r.id = :id");
        }
        elseif ($type == 'FormatActivite') {
            $query->join("d.creneau", "c")
                ->join("c.formatActivite", "f")
                ->where("f.id = :id");
        }
        $query->setParameter("id", $id);
        return $query->getQuery()->getResult();
    }    

    public function findByDhtmlxDateByDay($day, $formatActiviteId, $depSerie = true){
        $rsm = new ResultSetMappingBuilder($this->getEntityManager());
        $rsm->addRootEntityFromClassMetadata('UcaBundle:DhtmlxEvenement', 'alias');

        $andWhere = "";
        if($depSerie){
            $andWhere = "and d1.dependance_serie = true";
        }

        $SQL = "
            Select *, MIN(dhtmlx1.date_debut)
            From (
            select d1.*
                FROM dhtmlx_date as d1
                LEFT JOIN dhtmlx_date d
                ON d.id = d1.serie_id

                LEFT JOIN creneau c
                ON c.id = d.creneau_id

                Where DATE_FORMAT(d1.date_debut, '%W') = ?
                and c.format_activite_id = ?
                $andWhere
                order BY d1.date_debut
                ) dhtmlx1
            GROUP BY serie_id
            ORDER BY dhtmlx1.date_debut
        ";
        $query = $this->_em->createNativeQuery($SQL, $rsm);
        $query->setParameter('1', $day);
        $query->setParameter('2', $formatActiviteId);
    
        return $query->getResult();
    }
}
