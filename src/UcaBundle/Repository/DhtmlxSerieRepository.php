<?php

namespace UcaBundle\Repository;

use UcaBundle\Entity\FormatAvecCreneau;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
use Doctrine\ORM\Query\ResultSetMapping;


/**
 * ActiviteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DhtmlxSerieRepository extends \Doctrine\ORM\EntityRepository
{
    public function findDhtmlxDateByReference($type, $id)
    {
        $query = $this->createQueryBuilder("d");
        if ($type == "ressource") {
            $query->join("d.evenements", "e")
                ->join("e.reservabilite", "re")
                ->join("re.ressource", "r")
                ->where("r.id = :id")
                ->addSelect("e, re");
        } elseif ($type == 'FormatActivite') {
            $query->join("d.creneau", "c")
                ->join("c.formatActivite", "f")
                ->where("f.id = :id")
                ->addSelect("c");
        }
        $query->setParameter("id", $id);
        return $query->getQuery()->getResult();
    }

    public function findDhtmlxCreneauByUser($user)
    {
        return $this->createQueryBuilder("d")
            ->join("d.creneau", "c")
            ->join("c.inscriptions", "i")
            ->andWhere("i.utilisateur = :user")
            ->setParameter("user", $user)
            ->andWhere("i.statut = :statut")
            ->setParameter("statut", 'valide')
            ->getQuery()
            ->getResult();
    }

    public function findDhtmlxCreneauByEncadrant($user)
    {
        return $this->createQueryBuilder("d")
            ->join("d.creneau", "c")
            ->join("c.encadrants", "e")
            ->andWhere("e.id = :userid")
            ->setParameter("userid", $user->getId())
            ->getQuery()
            ->getResult();
    }
}
