{% extends "@Uca/Common/Main/Structure.UcaGest.html.twig" %}
{% import '@Uca/Macros/FlashBag.html.twig' as flashBag %}
{% import '@Uca/Macros/ImageAsset.html.twig' as ImageAsset %}

{% block title %}
    Extraction
{% endblock %}

{% block main %}

    {% include "@Uca/Common/Component/Bouton.Retour.html.twig" %}

    <h1>{{ (codeListe|lower ~ '.title')|trans }}</h1>

    {{ flashBag.showAll }}
    
    {% if is_granted('ROLE_GESTION_FORMAT_ACTIVITE_ECRITURE') %}
        <div class="row mt-5">
            <div class="col text-center">
                <h3>{{ 'common.extraction.liste.encadrants'|trans }}</h3>
            </div>
        </div>        
        <div class="row mt-2 mb-5">
            <div class="col text-center">
                <a href="{{ url('UcaGest_ExtractionListeEncadrants') }}" id="bouton_extraction_liste_encadrants" class="btn btn-primary">{{'common.extraire'|trans}}</a>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col text-center">
                <h3>{{ 'common.extraction.personnalisee'|trans }}</h3>
            </div>
        </div>   
        <div class="well">
        {{ form_start(form)}}
        <div class="row">

            <div class="col-sm-3">                
                {{ form_row(form.type_activite) }}
            </div>
            <div class="col-sm-3">
                {{ form_row(form.classe_activite) }}
            </div>
            <div class="col-sm-3">
                {{ form_row(form.activite) }}
            </div>
            <div class="col-sm-3">
                {{ form_row(form.encadrant) }}
            </div>

            <div class="col-sm-3">
                {{ form_row(form.formatActivite) }}
            </div>
            <div class="col-sm-3">
                {{ form_row(form.creneau) }}
            </div>
            <div class="col-sm-3">          
                {{ form_row(form.inscription) }}      
            </div>
            <div class="col-sm-3">
                {{ form_row(form.statut) }} 
            </div>

            <div class="col-sm-3">         
                 {{ form_row(form.formatActiviteDetails) }}
            </div>
            <div class="col-sm-3">
                {{ form_row(form.creneauDetails) }}
            </div>
            <div class="col-sm-3">
                {{ form_row(form.inscriptionDetails) }}
            </div>
            <div class="col-sm-3"></div>
            
            <div class="col-sm-12">
            </div>
        </div>
        {{ form_end(form) }}
        </div>     
        <div class="row mt-5">
            <div class="col text-center">
                <button id="bouton_extraction_personnalisee" class="btn btn-primary">{{'common.extraire'|trans}}</button>
            </div>
        </div>

    {% endif %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        $(document).ready(function(){
            $('.hidden').closest('.form-group').hide();

            //Suivant l'action réaliser sur checkbox on montre ou cache les détails
            $('#ucabundle_extraction_inscription').on('click', function(){
                showOrHideDetails('inscription');
            })
            $('#ucabundle_extraction_creneau').on('click', function(){
                showOrHideDetails('creneau');
            })
            $('#ucabundle_extraction_formatActivite').on('click', function(){
                showOrHideDetails('formatActivite');
            })

            $('#bouton_extraction_personnalisee').on('click', function(){
                let data = setData();
                $.ajax({
                    url: Routing.generate("ExtractionApi"),
                    type: "POST",
                    data: data,
                    xhrFields: {
                        responseType: 'blob'
                    },
                }).done(function(data){
                    if(data != null){
                        let a = document.createElement('a');
                        let url = window.URL.createObjectURL(data);
                        a.href = url;
                        let now = new Date();
                        a.download = "extraction_personnalisee_" + now.getFullYear() + "-" + (now.getMonth()+1) + "-" + now.getDate() + "_" + now.getHours() + "-" + now.getMinutes() + "-" + now.getSeconds() + ".xlsx";
                        document.body.append(a);
                        a.click();
                        a.remove();
                        window.URL.revokeObjectURL(url);
                    }
                }).fail(_uca.ajax.fail);
            })
        });

        function setData(){

            let detailsCreneau = {                
                'Description créneau': 0,
                'Tarif créneau': 0,
                'Capacité créneau': 0,
                'Profils autorisés créneau': 0,
                'Niveaux sportifs créneau': 0,
                'Eligibilité créneau': 0,
                'Période créneau': 0,
                'Campus': 0,
                'Lieu': 0,
            };

            let detailsFormatActivite = {
                'Description format': 0,
                'Dates effectives': 0,
                'Dates inscriptions': 0,
                'Dates publications': 0,
                'Capacité format': 0,
                'Statut format': 0,
                'Payant': 0,
                'Tarif format': 0,
                'Niveaux sportifs format': 0,
                'Profils autorisés format': 0,
                'Autorisations requises format': 0,
                'Ressource format': 0,
                'Carte à acheter': 0,
            };

            let detailsInscription = {
                'Nom et prénom inscrit': 0,
                'Date d\'inscription': 0,                
                'Date de validation': 0,
                'Date de desincription': 0,
                'Motif d\'annulation': 0,
                'Commentaire d\'annulation': 0,
            }

            let statut = 0;
            if($('#ucabundle_extraction_inscription').is(':checked')){
                statut = $('#ucabundle_extraction_statut').val();
                setArrayDetails($("#ucabundle_extraction_inscriptionDetails").val(), detailsInscription);
            }

            if($('#ucabundle_extraction_creneau').is(':checked')){
                setArrayDetails($("#ucabundle_extraction_creneauDetails").val(), detailsCreneau);
            }

            if($('#ucabundle_extraction_formatActivite').is(':checked')){
                setArrayDetails($("#ucabundle_extraction_formatActiviteDetails").val(), detailsFormatActivite);
            }

            let data = {
                "Encadrants": getCheckBoxValue("encadrant"),
                "Type d'activité": getCheckBoxValue("type_activite"),
                "Classe d'activité": getCheckBoxValue("classe_activite"),
                "Activité": getCheckBoxValue("activite"),
                "Format d'activité": getCheckBoxValue("formatActivite"),
                "Créneau": getCheckBoxValue("creneau"),
                "Inscription": getCheckBoxValue("inscription"),
                "Statut": statut,
                "Détails créneau": detailsCreneau,
                "Détails format d'activité": detailsFormatActivite,
                "Détails inscription": detailsInscription,
            };

            return data;
        }       

        function getCheckBoxValue(checkbox){
            if($('#ucabundle_extraction_'+checkbox).is(':checked')){
                return 1;
            }else{
                return 0;
            }
        }

        function showOrHideDetails(type){
            let idSelect = '.hidden_'+type;
            let idCheckBox = "#ucabundle_extraction_"+type;

            if($(idCheckBox).is(':checked')){
                $(idSelect).closest('.form-group').show();
            }else{
                $(idSelect).closest('.form-group').hide();
            }
        }

        function setArrayDetails(value, array){
            let size = Object.keys(array).length;
            for(let i = 0; i < size; i++){
                let index = i + 1;
                index = index.toString();
                let name = Object.keys(array)[i];
                if(value.includes(index)){                    
                    array[name] = 1;
                }else{
                    array[name] = 0;
                }               
            }
        }

    </script>
{% endblock %}
