fos_user:
    db_driver: orm
    firewall_name: main
    user_class: UcaBundle\Entity\Utilisateur
    use_flash_notifications: true
    use_listener: true
    group:
        group_class: UcaBundle\Entity\Groupe
        group_manager:  fos_user.group_manager.default
        form:
            type: UcaBundle\Form\GroupeType
            validation_groups: [Default]
    from_email:
        address: '%mailer_sender%'
        sender_name: '%mailer_name%'
    service:
        mailer: fos_user.mailer.twig_swift
    registration:
        confirmation: 
            enabled: true
            template:  "FOSUserBundle:Registration:email.txt.twig"
        form:
            type: UcaBundle\Form\UtilisateurType
            validation_groups: [Default]

    change_password:
        form:
            type:  FOS\UserBundle\Form\Type\ChangePasswordFormType
            validation_groups:  [ChangePassword]


fos_ck_editor:
    base_path: "build/ckeditor"
    js_path:   "build/ckeditor/ckeditor.js"

services: 
    admin.form.user_roles_type:
        class: UcaBundle\Form\GroupeType
        arguments: ['@security.role_hierarchy']
        tags:
            - { name: form.type}
    user.registration.controller:
        class: UserBundle\Controller\Utilisateur\RegistrationController
        arguments: ['@event_dispatcher', '@fos_user.registration.form.factory', '@fos_user.user_manager', '@security.token_storage']
        calls:
            - [setContainer, ['@service_container']]
    group.controller:
        class: UserBundle\Controller\Groupe\GroupController
        arguments: ['@event_dispatcher', '@fos_user.group.form.factory', '@fos_user.group_manager']
        calls:
            - [setContainer, ['@service_container']]
    user.change_password.controller:
        class: UserBundle\Controller\Utilisateur\ChangePasswordController
        arguments: ['@event_dispatcher', '@fos_user.change_password.form.factory', '@fos_user.user_manager', '@security.token_storage']
        calls:
            - [setContainer, ['@service_container']]